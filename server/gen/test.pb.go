// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: test.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TestStruct struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Age           int32                  `protobuf:"varint,2,opt,name=age,proto3" json:"age,omitempty"`
	IsStudent     bool                   `protobuf:"varint,3,opt,name=is_student,json=isStudent,proto3" json:"is_student,omitempty"`
	Friends       []string               `protobuf:"bytes,4,rep,name=friends,proto3" json:"friends,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TestStruct) Reset() {
	*x = TestStruct{}
	mi := &file_test_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TestStruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestStruct) ProtoMessage() {}

func (x *TestStruct) ProtoReflect() protoreflect.Message {
	mi := &file_test_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestStruct.ProtoReflect.Descriptor instead.
func (*TestStruct) Descriptor() ([]byte, []int) {
	return file_test_proto_rawDescGZIP(), []int{0}
}

func (x *TestStruct) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TestStruct) GetAge() int32 {
	if x != nil {
		return x.Age
	}
	return 0
}

func (x *TestStruct) GetIsStudent() bool {
	if x != nil {
		return x.IsStudent
	}
	return false
}

func (x *TestStruct) GetFriends() []string {
	if x != nil {
		return x.Friends
	}
	return nil
}

type AddTestStructRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TestStruct    *TestStruct            `protobuf:"bytes,1,opt,name=test_struct,json=testStruct,proto3" json:"test_struct,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddTestStructRequest) Reset() {
	*x = AddTestStructRequest{}
	mi := &file_test_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddTestStructRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddTestStructRequest) ProtoMessage() {}

func (x *AddTestStructRequest) ProtoReflect() protoreflect.Message {
	mi := &file_test_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddTestStructRequest.ProtoReflect.Descriptor instead.
func (*AddTestStructRequest) Descriptor() ([]byte, []int) {
	return file_test_proto_rawDescGZIP(), []int{1}
}

func (x *AddTestStructRequest) GetTestStruct() *TestStruct {
	if x != nil {
		return x.TestStruct
	}
	return nil
}

type AddTestStructResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddTestStructResponse) Reset() {
	*x = AddTestStructResponse{}
	mi := &file_test_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddTestStructResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddTestStructResponse) ProtoMessage() {}

func (x *AddTestStructResponse) ProtoReflect() protoreflect.Message {
	mi := &file_test_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddTestStructResponse.ProtoReflect.Descriptor instead.
func (*AddTestStructResponse) Descriptor() ([]byte, []int) {
	return file_test_proto_rawDescGZIP(), []int{2}
}

func (x *AddTestStructResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

var File_test_proto protoreflect.FileDescriptor

const file_test_proto_rawDesc = "" +
	"\n" +
	"\n" +
	"test.proto\"k\n" +
	"\n" +
	"TestStruct\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x10\n" +
	"\x03age\x18\x02 \x01(\x05R\x03age\x12\x1d\n" +
	"\n" +
	"is_student\x18\x03 \x01(\bR\tisStudent\x12\x18\n" +
	"\afriends\x18\x04 \x03(\tR\afriends\"D\n" +
	"\x14AddTestStructRequest\x12,\n" +
	"\vtest_struct\x18\x01 \x01(\v2\v.TestStructR\n" +
	"testStruct\"1\n" +
	"\x15AddTestStructResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccessB\x18Z\x16capstone-2025-30/protob\x06proto3"

var (
	file_test_proto_rawDescOnce sync.Once
	file_test_proto_rawDescData []byte
)

func file_test_proto_rawDescGZIP() []byte {
	file_test_proto_rawDescOnce.Do(func() {
		file_test_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_test_proto_rawDesc), len(file_test_proto_rawDesc)))
	})
	return file_test_proto_rawDescData
}

var file_test_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_test_proto_goTypes = []any{
	(*TestStruct)(nil),            // 0: TestStruct
	(*AddTestStructRequest)(nil),  // 1: AddTestStructRequest
	(*AddTestStructResponse)(nil), // 2: AddTestStructResponse
}
var file_test_proto_depIdxs = []int32{
	0, // 0: AddTestStructRequest.test_struct:type_name -> TestStruct
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_test_proto_init() }
func file_test_proto_init() {
	if File_test_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_test_proto_rawDesc), len(file_test_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_test_proto_goTypes,
		DependencyIndexes: file_test_proto_depIdxs,
		MessageInfos:      file_test_proto_msgTypes,
	}.Build()
	File_test_proto = out.File
	file_test_proto_goTypes = nil
	file_test_proto_depIdxs = nil
}
